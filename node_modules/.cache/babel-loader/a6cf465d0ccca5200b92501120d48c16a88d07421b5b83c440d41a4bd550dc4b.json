{"ast":null,"code":"var _jsxFileName = \"/Users/adinayk/programming/projects/ctgopen/src/pages/Login.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { Box, Button, Stack, TextField } from \"@mui/material\";\nimport Title from \"../components/Title\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Login = () => {\n  _s();\n  const navigate = useNavigate();\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [loginStatus, setLoginStatus] = useState(\"\"); // 'success', 'failure'\n\n  const handleLogin = async e => {\n    e.preventDefault();\n    // Send a POST request to the Spring Boot backend with username and password\n    const response = await fetch(\"http://localhost:8080/ctgopenapi/v1/member/login\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        email,\n        password\n      })\n    });\n    if (response.ok) {\n      // Handle successful login\n      console.log(\"Login successful\");\n      navigate(\"/leagues\");\n    } else {\n      // Handle unsuccessful login\n      console.error(\"Invalid credentials\");\n      setLoginStatus(\"failure\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Stack, {\n    component: \"section\",\n    direction: \"column\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    sx: {\n      py: 10,\n      px: 2\n    },\n    children: [loginStatus === \"failure\" && /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        color: \"red\"\n      },\n      children: \"Login failed. Please check your credentials.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Title, {\n      text: \"Login\",\n      textAlign: \"center\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      component: \"form\",\n      onSubmit: handleLogin,\n      sx: {\n        mt: 1,\n        py: 2\n      },\n      children: [/*#__PURE__*/_jsxDEV(TextField, {\n        margin: \"normal\",\n        required: true,\n        fullWidth: true,\n        id: \"email\",\n        label: \"Email\",\n        name: \"email\",\n        autoComplete: \"email\",\n        autoFocus: true,\n        onChange: e => setEmail(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        margin: \"normal\",\n        required: true,\n        fullWidth: true,\n        name: \"password\",\n        label: \"Password\",\n        type: \"password\",\n        id: \"password\",\n        autoComplete: \"password\",\n        onChange: e => setPassword(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        fullWidth: true,\n        type: \"submit\",\n        size: \"medium\",\n        sx: {\n          fontSize: \"0.9rem\",\n          textTransform: \"capitalize\",\n          py: 2,\n          mt: 3,\n          mb: 2,\n          borderRadius: 0,\n          backgroundColor: \"#14192d\",\n          \"&:hover\": {\n            backgroundColor: \"#1e2a5a\"\n          }\n        },\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n};\n_s(Login, \"+6kQINzY5fXGG2t2blAVd61raZo=\", false, function () {\n  return [useNavigate];\n});\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useState","useNavigate","Box","Button","Stack","TextField","Title","Login","navigate","email","setEmail","password","setPassword","loginStatus","setLoginStatus","handleLogin","e","preventDefault","response","fetch","method","headers","body","JSON","stringify","ok","console","log","error","py","px","color","mt","target","value","fontSize","textTransform","mb","borderRadius","backgroundColor"],"sources":["/Users/adinayk/programming/projects/ctgopen/src/pages/Login.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { Box, Button, Stack, TextField } from \"@mui/material\";\nimport Title from \"../components/Title\";\n\nconst Login = () => {\n  const navigate = useNavigate();\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [loginStatus, setLoginStatus] = useState(\"\"); // 'success', 'failure'\n\n  const handleLogin = async (e) => {\n    e.preventDefault();\n    // Send a POST request to the Spring Boot backend with username and password\n    const response = await fetch(\n      \"http://localhost:8080/ctgopenapi/v1/member/login\",\n      {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify({ email, password }),\n      }\n    );\n    if (response.ok) {\n      // Handle successful login\n      console.log(\"Login successful\");\n      navigate(\"/leagues\");\n    } else {\n      // Handle unsuccessful login\n      console.error(\"Invalid credentials\");\n      setLoginStatus(\"failure\");\n    }\n  };\n\n  return (\n    <Stack\n      component=\"section\"\n      direction=\"column\"\n      justifyContent=\"center\"\n      alignItems=\"center\"\n      sx={{\n        py: 10,\n        px: 2,\n      }}\n    >\n      {loginStatus === \"failure\" && (\n        <p style={{ color: \"red\" }}>\n          Login failed. Please check your credentials.\n        </p>\n      )}\n\n      <Title text={\"Login\"} textAlign={\"center\"} />\n      {\n        <Box\n          component=\"form\"\n          onSubmit={handleLogin}\n          sx={{\n            mt: 1,\n            py: 2,\n          }}\n        >\n          <TextField\n            margin=\"normal\"\n            required\n            fullWidth\n            id=\"email\"\n            label=\"Email\"\n            name=\"email\"\n            autoComplete=\"email\"\n            autoFocus\n            onChange={(e) => setEmail(e.target.value)}\n          />\n          <TextField\n            margin=\"normal\"\n            required\n            fullWidth\n            name=\"password\"\n            label=\"Password\"\n            type=\"password\"\n            id=\"password\"\n            autoComplete=\"password\"\n            onChange={(e) => setPassword(e.target.value)}\n          />\n          <Button\n            variant=\"contained\"\n            fullWidth\n            type=\"submit\"\n            size=\"medium\"\n            sx={{\n              fontSize: \"0.9rem\",\n              textTransform: \"capitalize\",\n              py: 2,\n              mt: 3,\n              mb: 2,\n              borderRadius: 0,\n              backgroundColor: \"#14192d\",\n              \"&:hover\": {\n                backgroundColor: \"#1e2a5a\",\n              },\n            }}\n          >\n            Login\n          </Button>\n        </Box>\n      }\n    </Stack>\n  );\n};\n\nexport default Login;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}